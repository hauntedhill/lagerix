package de.hscoburg.etif.vbis.lagerix.appclient.windows;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.oned.Code128Writer;
import de.hscoburg.etif.vbis.lagerix.appclient.utils.TableColumnAdjuster;
import de.hscoburg.etif.vbis.lagerix.backend.interfaces.PlaceManagerEJBRemoteInterface;
import de.hscoburg.etif.vbis.lagerix.backend.interfaces.dto.YardDTO;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.List;
import javax.imageio.ImageIO;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 * Displays the yards frame
 *
 * @author mti578
 */
public class JPanelStockManagerYards extends javax.swing.JPanel {

    private PlaceManagerEJBRemoteInterface placeManager = null;
    private PrintService selectedPrintService = null;
    private PrintService pss[] = null;
    private JFrameJavaAppClientMainWindow mainWindow = null;

    /**
     * Creates new form JPanelStockManagerYards
     * @param placeManager
     * @param mainWindow
     */
    public JPanelStockManagerYards(PlaceManagerEJBRemoteInterface placeManager, JFrameJavaAppClientMainWindow mainWindow) {
        initComponents();
        this.placeManager = placeManager;
        this.mainWindow = mainWindow;
        jTableStockManagerYardsTable.getSelectionModel().addListSelectionListener(
                new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent e) {
                        jTableStockManagerYardsTableValueChanged(e);
                    }
                ;
    }

    );
    }

    /*
    update the gui elements
    */
    private void jTableStockManagerYardsTableValueChanged(ListSelectionEvent e) {
        if (jTableStockManagerYardsTable.isEnabled()) {
            if (jTableStockManagerYardsTable.getSelectedRow() >= 0) {
                String yardId = jTableStockManagerYardsTable.getModel().getValueAt(jTableStockManagerYardsTable.getSelectedRow(), 0).toString();
                jTextFieldStockManagerYardId.setText(yardId);
                jButtonStockManagerYardDelete.setEnabled(true);
                jButtonStockManagerPrintYardBarcode.setEnabled(true);
            } else {
                jButtonStockManagerPrintYardBarcode.setEnabled(false);
                jButtonStockManagerYardDelete.setEnabled(false);
                jTextFieldStockManagerYardId.setText("");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanelStockManagerYardsPanel = new javax.swing.JPanel();
        jScrollPaneStockManagerYardManagment = new javax.swing.JScrollPane();
        jTableStockManagerYardsTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButtonStockManagerYardDelete = new javax.swing.JButton();
        jButtonStockManagerYardNewYard = new javax.swing.JButton();
        jButtonStockManagerPrintYardBarcode = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldStockManagerYardId = new javax.swing.JTextField();

        jDialog1.setAlwaysOnTop(true);
        jDialog1.setMinimumSize(new java.awt.Dimension(269, 170));
        jDialog1.setModal(true);
        jDialog1.setResizable(false);

        jLabel5.setText("Bitte wählen Sie einen Drucker aus:");

        jButton2.setText("Drucken");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Abbruch");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        setLayout(new java.awt.GridBagLayout());

        jPanelStockManagerYardsPanel.setPreferredSize(new java.awt.Dimension(750, 300));
        jPanelStockManagerYardsPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPaneStockManagerYardManagment.setMaximumSize(null);
        jScrollPaneStockManagerYardManagment.setMinimumSize(null);

        jTableStockManagerYardsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTableStockManagerYardsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableStockManagerYardsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneStockManagerYardManagment.setViewportView(jTableStockManagerYardsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelStockManagerYardsPanel.add(jScrollPaneStockManagerYardManagment, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButtonStockManagerYardDelete.setText("Löschen");
        jButtonStockManagerYardDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStockManagerYardDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel8.add(jButtonStockManagerYardDelete, gridBagConstraints);

        jButtonStockManagerYardNewYard.setText("Neuen Lagerplatz anlegen");
        jButtonStockManagerYardNewYard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStockManagerYardNewYardActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel8.add(jButtonStockManagerYardNewYard, gridBagConstraints);

        jButtonStockManagerPrintYardBarcode.setText("Barcode drucken");
        jButtonStockManagerPrintYardBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStockManagerPrintYardBarcodeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel8.add(jButtonStockManagerPrintYardBarcode, gridBagConstraints);

        jLabel1.setText("Lagerplatz ID:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel8.add(jLabel1, gridBagConstraints);

        jTextFieldStockManagerYardId.setColumns(20);
        jTextFieldStockManagerYardId.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel8.add(jTextFieldStockManagerYardId, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel4.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        jPanelStockManagerYardsPanel.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanelStockManagerYardsPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * updates the yards table
     */
    
    public void createJTableStockManagerYards() {
        mainWindow.setBusy();

        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() {
                if (placeManager.getStorages().size() > 0) {
                    DefaultTableModel model = new DefaultTableModel(0, 1);
                    model.setColumnIdentifiers(new Object[]{"Lagerplatz-ID"});

                    List<YardDTO> yards = placeManager.getAllYards(placeManager.getStorages().get(0).getId());

                    for (YardDTO yard : yards) {
                        model.addRow(new Object[]{(Integer) yard.getId()});
                    }

                    return model;
                } else {
                    return null;
                }
            }

            @Override
            public void done() {
                try {
                    Object returnParam = get();
                    if (returnParam != null) {
                        jButtonStockManagerPrintYardBarcode.setEnabled(false);
                        jButtonStockManagerYardDelete.setEnabled(false);
                        jTextFieldStockManagerYardId.setEnabled(false);
                        jTableStockManagerYardsTable.setModel((DefaultTableModel) returnParam);
                        TableColumnAdjuster tca = new TableColumnAdjuster(jTableStockManagerYardsTable);
                        tca.adjustColumns();
                    } else {
                        DefaultTableModel model = new DefaultTableModel(0, 1);
                        model.setColumnIdentifiers(new Object[]{"Lagerplatz-ID"});
                        jTableStockManagerYardsTable.setModel(model);

                        jButtonStockManagerPrintYardBarcode.setEnabled(false);
                        jButtonStockManagerYardDelete.setEnabled(false);
                        jButtonStockManagerYardNewYard.setEnabled(false);
                        jTextFieldStockManagerYardId.setEnabled(false);
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                mainWindow.clearBusy();
            }
        };

        worker.execute();
    }

    /*
    deletes the selected yard or discards any changes
    */
    private void jButtonStockManagerYardDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStockManagerYardDeleteActionPerformed
        if (jButtonStockManagerYardDelete.getText().equals("Löschen")) {
            if (JOptionPane.showConfirmDialog(this, "Moechten Sie den Lagerplatz: "
                    + jTableStockManagerYardsTable.getModel().getValueAt(jTableStockManagerYardsTable.getSelectedRow(), 0)
                    + " wirklich loeschen?", "Sind Sie sicher?", JOptionPane.YES_NO_OPTION)
                    == JOptionPane.YES_OPTION) {
                try {
                    Integer yardId = (Integer) jTableStockManagerYardsTable.getModel().getValueAt(jTableStockManagerYardsTable.getSelectedRow(), 0);
                    placeManager.deleteYard(yardId);
                    createJTableStockManagerYards();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Fehler beim loeschen des Lagerplatzes: "
                            + jTableStockManagerYardsTable.getModel().getValueAt(jTableStockManagerYardsTable.getSelectedRow(), 0)
                            + ". Bitte loeschen Sie zuerst den aktuell im Lagerplatz eingelagerten Artikel.",
                            "Fehler", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            jButtonStockManagerYardNewYard.setEnabled(true);
            jButtonStockManagerYardDelete.setText("Löschen");
            jButtonStockManagerYardDelete.setEnabled(false);
            jButtonStockManagerPrintYardBarcode.setEnabled(false);
            jButtonStockManagerYardNewYard.setText("Neuen Lagerplatz anlegen");
            jTableStockManagerYardsTable.setEnabled(true);
            createJTableStockManagerYards();
        }
    }//GEN-LAST:event_jButtonStockManagerYardDeleteActionPerformed

    /*
    creates a new yard
    */
    private void jButtonStockManagerYardNewYardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStockManagerYardNewYardActionPerformed
        placeManager.createNewYard(placeManager.getStorages().get(0).getId());
        createJTableStockManagerYards();
    }//GEN-LAST:event_jButtonStockManagerYardNewYardActionPerformed

    /*
    prints the yard id as barcode
    */
    private void jButtonStockManagerPrintYardBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStockManagerPrintYardBarcodeActionPerformed
        int id = (Integer) jTableStockManagerYardsTable.getModel().getValueAt(jTableStockManagerYardsTable.getSelectedRow(), 0);

        int width = 440;
        int height = 48;

        selectedPrintService = null;
        PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
        pras.add(new Copies(1));
        pss = PrintServiceLookup.lookupPrintServices(DocFlavor.INPUT_STREAM.PNG, pras);

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int cnt = 0; cnt < pss.length; cnt++) {
            model.addElement(pss[cnt].getName());
        }

        jComboBox1.setModel(model);

        jComboBox1.doLayout();
        jComboBox1.invalidate();

        jDialog1.setModal(true);
        jDialog1.setVisible(true);

        if (selectedPrintService != null) {
            BitMatrix bitMatrix;
            try {
                bitMatrix = new Code128Writer().encode("S" + id, BarcodeFormat.CODE_128, width, height, null);
                ByteArrayOutputStream streamMemoryStream = new ByteArrayOutputStream();
                BufferedImage buffImage = MatrixToImageWriter.toBufferedImage(bitMatrix);
                BufferedImage barcodeAndText = process(buffImage, "S" + id);
                ImageIO.write(barcodeAndText, "jpg", streamMemoryStream);

                byte[] barcodeImage = streamMemoryStream.toByteArray();
                ByteArrayInputStream streamInput = new ByteArrayInputStream(barcodeImage);

                DocPrintJob job = selectedPrintService.createPrintJob();
                Doc doc = new SimpleDoc(streamInput, DocFlavor.INPUT_STREAM.PNG, null);
                job.print(doc, pras);
                streamInput.close();
            } catch (Exception e) {
                int ahhh = 0;
            }
        }
    }//GEN-LAST:event_jButtonStockManagerPrintYardBarcodeActionPerformed
    /*
    helper class for printing the yard id below the barcode
    */
    private BufferedImage process(BufferedImage old, String text) {
        int w = old.getWidth();
        int h = old.getHeight() + 50;
        BufferedImage img = new BufferedImage(
                w, h, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = img.createGraphics();
        g2d.drawImage(old, 0, 0, null);
        g2d.setPaint(Color.BLACK);
        g2d.setFont(new Font("Serif", Font.BOLD, 20));
        FontMetrics fm = g2d.getFontMetrics();
        int x = (img.getWidth() - fm.stringWidth(text)) / 2;
        int y = h - fm.getHeight();
        g2d.drawString(text, x, y);
        g2d.dispose();
        return img;
    }

    /*
    selects the selected printer
    */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        selectedPrintService = pss[jComboBox1.getSelectedIndex()];
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /*
    avorts printing
    */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        selectedPrintService = null;
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonStockManagerPrintYardBarcode;
    private javax.swing.JButton jButtonStockManagerYardDelete;
    private javax.swing.JButton jButtonStockManagerYardNewYard;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelStockManagerYardsPanel;
    private javax.swing.JScrollPane jScrollPaneStockManagerYardManagment;
    private javax.swing.JTable jTableStockManagerYardsTable;
    private javax.swing.JTextField jTextFieldStockManagerYardId;
    // End of variables declaration//GEN-END:variables
}
